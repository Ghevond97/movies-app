{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export interface TrendingMovieData {\n  adult: boolean;\n  backdrop_path: string;\n  genre_ids: number[];\n  id: number;\n  media_type: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n  name: string;\n}\n\nexport interface MovieDetails {\n  adult: boolean;\n  backdrop_path: string;\n  poster_path: string;\n  belongs_to_collection: {\n    id: string;\n    name: string;\n    poster_path: string;\n    backdrop_path: string;\n  };\n  budget: number;\n  genres: [{ id: number; name: string }];\n  id: number;\n  original_title: string;\n  overview: string;\n  title: string;\n  vote_average: number;\n  credits: { cast: [{ id: number; name: string; character: string }] };\n  keywords: { keywords: [{ id: number; name: string }] };\n  reviews: {\n    page: 1;\n    results: [\n      {\n        author: string;\n        author_details: {\n          name: string;\n          username: string;\n          avatar_path: null | string;\n          rating: number;\n        };\n        content: string;\n        created_at: string;\n        id: string;\n        updated_at: string;\n      }\n    ];\n  };\n}\ninterface ApiResponse {\n  page: number;\n  results: TrendingMovieData[];\n  total_pages: number;\n  total_results: number;\n}\nexport async function fetchData(\n  apiKey: string,\n  signal: AbortController[\"signal\"]\n): Promise<ApiResponse> {\n  const response = await fetch(\n    `\n  https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`,\n    { signal }\n  );\n\n  const data = await response.json();\n  return data;\n}\n\nexport async function fetchMoviesByKeyword(\n  apiKey: string,\n  signal: AbortController[\"signal\"],\n  keyWord: string\n): Promise<ApiResponse> {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/multi?api_key=${apiKey}&language=en-US&query=${keyWord}&page=${1}&include_adult=false`,\n    { signal }\n  );\n  const data = await response.json();\n  return data;\n}\n\nexport async function fetchDetails(\n  apiKey: string,\n  id: string\n): Promise<{ data: MovieDetails; statusCode: number }> {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&append_to_response=credits%2Ckeywords%2Creviews&language=en-US`\n    );\n\n    // Check if response is successful\n    if (response.ok) {\n      const data = await response.json();\n      return { data, statusCode: response.status };\n    } else {\n      // If response is not successful, throw an error with status code\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n  } catch (error) {\n    throw new Error(\"something wen wrong\");\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA+DA,SAAsB,UACpB,QACA,QACsB;AAAA;AACtB,UAAM,WAAW,MAAM;AAAA,MACrB;AAAA,0DACsD,MAAM;AAAA,MAC5D,EAAE,OAAO;AAAA,IACX;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAO;AAAA,EACT;AAAA;AAEA,SAAsB,qBACpB,QACA,QACA,SACsB;AAAA;AACtB,UAAM,WAAW,MAAM;AAAA,MACrB,qDAAqD,MAAM,yBAAyB,OAAO,SAAS,CAAC;AAAA,MACrG,EAAE,OAAO;AAAA,IACX;AACA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAO;AAAA,EACT;AAAA;AAEA,SAAsB,aACpB,QACA,IACqD;AAAA;AACrD,QAAI;AACF,YAAM,WAAW,MAAM;AAAA,QACrB,sCAAsC,EAAE,YAAY,MAAM;AAAA,MAC5D;AAGA,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAK;AACjC,eAAO,EAAE,MAAM,YAAY,SAAS,OAAO;AAAA,MAC7C,OAAO;AAEL,cAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,MAC1D;AAAA,IACF,SAAS,OAAO;AACd,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACvC;AAAA,EACF;AAAA;","names":[]}